"use strict";!function(){var e=function(){chrome.runtime.sendMessage({action:"useragent.get"},function(e){"string"==typeof e&&""!==e||(e="User-Agent (managed by this extension) is not available"),UI.forEachCssClass("actual-user-agent",function(n){n.innerHTML!==e&&(n.innerHTML=e)})})};window.setInterval(e,500);e(),UI.forEachCssClass("enabled-on-this-domain",function(e){if(UI.isCheckbox(e)){n=function(n){chrome.runtime.sendMessage({action:"exceptions.uriMatch",data:{uri:n}},function(t){e.checked=!t,UI.addEvent(e,"change",function(){chrome.runtime.sendMessage({action:"exceptions."+(!0===e.checked?"remove":"add")+"UriPattern",data:{uri:n}},function(t){"boolean"==typeof t?chrome.runtime.sendMessage({action:"exceptions.uriMatch",data:{uri:n}},function(n){e.checked=!n}):console.error("Invalid response format (not boolean)")})})})},"object"==typeof chrome.tabs?chrome.tabs&&chrome.tabs.query({active:!0,currentWindow:!0},function(e){n.call(null,e[0].url)}):n.call(null,window.location.href)}var n}),chrome.runtime.sendMessage({action:"settings.getEnabled"},function(e){if("boolean"==typeof e){var n=function(e){UI.forEachCssClass("change-enabled-state",function(n){UI.hasCssClass(n,"disable")&&!e||UI.hasCssClass(n,"enable")&&e?UI.addCssClass(n,"hidden"):UI.removeCssClass(n,"hidden")})},t=function(e){chrome.runtime.sendMessage({action:"settings.setEenabled",data:{enabled:e}},function(t){!0===t?n(e):console.error("Error while changing enabled state:\n",t)})};n(e),UI.forEachCssClass("change-enabled-state",function(e){UI.hasCssClass(e,"disable")&&UI.addEvent(e,"click",function(){t(!1)}),UI.hasCssClass(e,"enable")&&UI.addEvent(e,"click",function(){t(!0)})})}else console.error('Invalid "settings.getEnabled" response format:\n',e)}),UI.forEachCssClass("renew-useragent",function(n){UI.addEvent(n,"click",function(){chrome.runtime.sendMessage({action:"useragent.renew"},function(n){!0===n?e():console.error("Renew useragent completed with error")})})}),UI.forEachCssClass("open-settings-panel",function(e){UI.addEvent(e,"click",function(){chrome.runtime&&(chrome.runtime.openOptionsPage?chrome.runtime.openOptionsPage():chrome.runtime.getURL?window.open(chrome.runtime.getURL("/html/options.html")):alert("Cannot open settings page from here, click on popup frame only"))})}),chrome.runtime.sendMessage({action:"links.bugreport"},function(e){UI.forEachCssClass("bugreport-link",function(n){"string"==typeof e&&""!==e?UI.addEvent(n,"click",function(){chrome.tabs.create({url:e})}):UI.addCssClass(n,"hidden")})}),chrome.runtime.sendMessage({action:"links.donate"},function(e){UI.forEachCssClass("donate-link",function(n){"string"==typeof e&&""!==e?UI.addEvent(n,"click",function(){chrome.tabs.create({url:e})}):UI.addCssClass(n,"hidden")})});window.setInterval(function(){UI.getElementById("main",function(e){var n=document.body.style.height,t=e.offsetHeight;n!==t&&(document.body.style.height=t+"px")})},50);UI.forEachWithDataAttrib("l10n",function(e,n){UI.localizeElement(e,n)})}();