"use strict";var API={settings:{getEnabled:function(){return Settings.enabled},setEenabled:function(e){var t="object"==typeof e&&e.hasOwnProperty("enabled")?e.enabled:null;return"boolean"==typeof t?(Settings.enabled=t,console.log('Enabled state is "'+t+'" now'),!0):(console.error('Invalid input data format - property "enabled" must be boolean'),!1)},getRenewEnabled:function(){return Settings.renew_enabled},setRenewEnabled:function(e){var t="object"==typeof e&&e.hasOwnProperty("enabled")?e.enabled:null;return"boolean"==typeof t?(Settings.renew_enabled=t,console.log('Renew enabled state is "'+t+'" now'),!0):(console.error('Invalid input data format - property "enabled" must be boolean'),!1)},getRenewIntervalInMicroseconds:function(){var e=Settings.renew_interval;return void 0!==e?parseInt(e,10):-0},getRenewInterval:function(){return Math.round(this.getRenewIntervalInMicroseconds()/60/1e3)},setRenewInterval:function(e){var t="object"==typeof e&&e.hasOwnProperty("interval")?60*parseInt(e.interval,10)*1e3:null;if("number"==typeof t&&!isNaN(t)){return t=t<=6e4?6e4:t,Settings.renew_interval=t,console.log('Renew interval is "'+t+'" now'),!0}return console.error('Invalid input data format - property "interval" must be number'),!1},getRenewOnstartupEnabled:function(){return Settings.renew_onstartup},setRenewOnstartupEnabled:function(e){var t="object"==typeof e&&e.hasOwnProperty("enabled")?e.enabled:null;return"boolean"==typeof t?(Settings.renew_onstartup=t,console.log('Renew on browser startup enabled state is "'+t+'" now'),!0):(console.error('Invalid input data format - property "enabled" must be boolean'),!1)},getSyncEnabled:function(){return Settings.sync},setSyncEnabled:function(e){var t="object"==typeof e&&e.hasOwnProperty("enabled")?e.enabled:null;return"boolean"==typeof t?(Settings.sync=t,console.log('Sync enabled state is "'+t+'" now'),!0):(console.error('Invalid input data format - property "enabled" must be boolean'),!1)},getCustomUseragentEnabled:function(){return Settings.custom_useragent_enabled},setCustomUseragentEnabled:function(e){var t="object"==typeof e&&e.hasOwnProperty("enabled")?e.enabled:null;return"boolean"==typeof t?(Settings.custom_useragent_enabled=t,console.log('Use custom User-Agent enabled state is "'+t+'" now'),API.useragent.renew(),!0):(console.error('Invalid input data format - property "enabled" must be boolean'),!1)},getJavascriptProtectionEnabled:function(){return Settings.javascript_protection_enabled},setJavascriptProtectionEnabled:function(e){var t="object"==typeof e&&e.hasOwnProperty("enabled")?e.enabled:null;return"boolean"==typeof t?(Settings.javascript_protection_enabled=t,console.log('Use replacing User-Agent for Javascript enabled state is "'+t+'" now'),!0):(console.error('Invalid input data format - property "enabled" must be boolean'),!1)},getCustomUseragent:function(){return Settings.custom_useragent_value},setCustomUseragent:function(e){var t="object"==typeof e&&e.hasOwnProperty("useragent")?e.useragent:null;return"string"==typeof t?(Settings.custom_useragent_value=t,console.log('Custom User-Agent is "'+t+'" now'),!0):(console.error('Invalid input data format - property "useragent" must be string'),!1)},getCustomUseragentList:function(){return Settings.custom_useragent_list},setCustomUseragentList:function(e){var t="object"==typeof e&&e.hasOwnProperty("useragents")?e.useragents:null;if("[object Array]"===Object.prototype.toString.call(t)){for(var n=[],r=0;r<t.length;r++){var o=t[r].toString().trim();""!==o&&n.push(o)}return Settings.custom_useragent_list=n,console.log("Custom user agent list updated with: "+Settings.custom_useragent_list.join(", ")),!0}return!1}},useragent:{set:function(e){var t="object"==typeof e&&e.hasOwnProperty("useragent")?e.useragent:null;return"string"==typeof t?(Settings.useragent=t,console.info('User-agent updated: "'+t+'"'),!0):(console.error('Invalid input data format - property "useragent" must be string'),!1)},clear:function(){return Settings.useragent=null,console.info("User-agent cleared"),!0},get:function(){return"string"==typeof Settings.useragent?Settings.useragent:null},getNew:function(){for(var e,t=new UAGenerator,n=0;n<10&&(e=t.generate(Settings.generator_types),this.get()===e);++n);return e},renew:function(){var e;if("string"==typeof(e=Settings.custom_useragent_enabled?Settings.custom_useragent_list[Math.floor(Math.random()*Settings.custom_useragent_list.length)]:this.getNew())&&""!==e){if(this.set({useragent:e}))return!0}else console.error("Could not renew user agent");return!1}},exceptions:{uriPatternMatch:function(e){var t,n,r,o,a="object"==typeof e&&e.hasOwnProperty("uri")?e.uri:null,s="object"==typeof e&&e.hasOwnProperty("pattern")?e.pattern:null;if("string"==typeof a&&"string"==typeof s){if(t=a,o=!1===r?"":"i",n=(n=(n=s).replace(/[[\]{}()+.\\^$|]/g,"\\$&")).replace(/[*?]/g,".$&"),new RegExp("^"+n+"$",o).test(t))return!0}else console.error('Invalid input data format - property "uri" and "pattern" must be strings');return!1},uriMatch:function(e){var t="object"==typeof e&&e.hasOwnProperty("uri")?e.uri:null;if("string"==typeof t&&""!==t){for(var n=this.get(),r=0,o=n.length;r<o;++r)if(this.uriPatternMatch({uri:t,pattern:n[r]}))return!0}else console.error('Invalid input data format - property "uri" must be string');return!1},getPatternByUri:function(e){var t="object"==typeof e&&e.hasOwnProperty("uri")?e.uri:null;if("string"==typeof t&&""!==t){var n=function(e,t){var n=e.match(t);return n&&n[1]},r=function(e,t){switch(t){case"protocol":return n(e,/^([^:]+)\:\/\//);case"domain":return n(e,/\:\/\/([^\/]*)\//)}return!1},o=r(t,"protocol"),a=r(t,"domain");if("string"==typeof o&&"string"==typeof a)return(o=(o=o.replace(new RegExp("^https","i"),"http")).replace(new RegExp("^http","i"),"http?"))+"://"+a+"/*"}else console.error('Invalid input data format - property "uri" must be string');return!1},get:function(){var e=Settings.exceptions_list;if("[object Array]"===Object.prototype.toString.call(e))return e;throw new Error("Exceptions list must be an array")},set:function(e){var t="object"==typeof e&&e.hasOwnProperty("exceptions")?e.exceptions:null;if("[object Array]"===Object.prototype.toString.call(t)){for(var n=[],r=0,o=t.length;r<o;r++){var a=t[r].toString().replace(/^\s+|\s+$/g,"");""!==a&&n.push(a)}return Settings.exceptions_list=n,console.log('Exceptions list updated: ["'+n.join('", "')+'"]'),!0}return console.error('Invalid input data format - property "exceptions" must be an array'),!1},exists:function(e){var t="object"==typeof e&&e.hasOwnProperty("pattern")?e.pattern:null;return"string"==typeof t&&""!==t?this.get().indexOf(t)>=0:(console.error('Invalid input data format - property "pattern" must be string'),null)},add:function(e){var t="object"==typeof e&&e.hasOwnProperty("pattern")?e.pattern:null;if("string"==typeof t&&""!==t){var n=this.get();if(this.exists({pattern:t}))console.info('Pattern "'+t+'" already exists in exceptions list');else if(n.unshift(t),this.set({exceptions:n}))return console.log('Pattern "'+t+'" added to exceptions list'),!0}else console.error('Invalid input data format - property "pattern" must be string');return!1},remove:function(e){var t="object"==typeof e&&e.hasOwnProperty("pattern")?e.pattern:null;if("string"==typeof t&&""!==t){var n=this.get();if(this.exists({pattern:t})){var r=n.indexOf(t);return n.splice(r,1),console.log('Pattern "'+t+'" removed from exceptions list'),!0}console.info('Nothing to remove - pattern "'+t+'" is not exists in exceptions list')}else console.error('Invalid input data format - property "pattern" must be string');return!1},addUriPattern:function(e){var t="object"==typeof e&&e.hasOwnProperty("uri")?e.uri:null;return"string"==typeof t&&""!==t?this.add({pattern:this.getPatternByUri({uri:t})}):(console.error('Invalid input data format - property "uri" must be string'),!1)},removeUriPattern:function(e){var t="object"==typeof e&&e.hasOwnProperty("uri")?e.uri:null;return"string"==typeof t&&""!==t?this.remove({pattern:this.getPatternByUri({uri:t})}):(console.error('Invalid input data format - property "uri" must be string'),!1)}},generator:{getTypes:function(){return Settings.generator_types},setTypes:function(e){var t="object"==typeof e&&e.hasOwnProperty("types")?e.types:[];return"string"==typeof t&&(t=[t]),"[object Array]"===Object.prototype.toString.call(t)?(Settings.generator_types=t,console.log('Generator types updated: ["'+t.join('", "')+'"]'),!0):(console.error('Invalid input data format - property "types" must be array or string'),!1)}},links:{bugreport:function(){return Settings.links_bugreport},donate:function(){return Settings.links_donate}}};